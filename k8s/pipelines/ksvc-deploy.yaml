apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: ksvc-deploy
  labels:
    pipeline.openshift.io/runtime: java
    pipeline.openshift.io/type: knative
spec:
  description: >-
    The Pipline to build and deploy the Hybrid Cloud Demo Java App https://github.com/redhat-developer-demos/hybrid-cloud as Knative Service.
  params:
    - name: IMAGE_NAME
      description: >-
        The fully qualified image name e.g example.com/tekton-tutorial/helloworld
      default: quay.io/kameshsampath/hybrid-cloud-kn
    - name: APP_NAME
      description: >-
        The Knative Service Name
      default: hybrid-cloud-backend
    - name: SERVICE_NAMESPACE
      description: >-
        The Knative Service Namespace
      default: hybrid-cloud-demo
    - name: KN_CONCURRENCY_LIMIT
      description: >-
        The maximum number of concurrent requests to allow per service pod
      default: "1"
    - name: KN_MAX_SCALE
      description: >-
        The maximum number of pods the service scale upto. Defaults to 0, which means unlimited.
      default: "0"
  workspaces:
    - name: source
  tasks:
    - name: query-cloud-provider
      taskRef:
        name: cloud-identifier
      runAfter:
        - buildah-build-push
    - name: deploy-kn-service
      taskRef:
        name: kn
        kind: ClusterTask
      runAfter:
        - query-cloud-provider
      params:
        - name: ARGS
          value:
            - service
            - create
            - $(params.APP_NAME)
            - --force
            - --image=$(params.IMAGE_NAME)
            - --concurrency-limit=$(params.KN_CONCURRENCY_LIMIT)
            - --max-scale=$(params.KN_MAX_SCALE)
            - --label=app.kubernetes.io/part-of=hybrid-cloud-demo
            - --env=WORKER_CLOUD_ID=$(tasks.query-cloud-provider.results.CLOUD_PROVIDER)
    - name: skupperize-kn-service
      runAfter:
        - deploy-kn-service
      workspaces:
        - name: source
          workspace: source
      taskRef:
        name: openshift-cli-deploy
      params:
        - name: SCRIPT
          value: |
            #!/usr/bin/env bash
            if ! oc get svc -n "$(params.SERVICE_NAMESPACE)" "$(params.APP_NAME)-skupper";
            then
            cat <<-EOF | oc create -n "$(params.SERVICE_NAMESPACE)" -f -
            apiVersion: v1
            kind: Service
            metadata:
              annotations:
                skupper.io/proxy: http
                skupper.io/target: "$(params.APP_NAME).$(params.SERVICE_NAMESPACE)"
              name: "$(params.APP_NAME)-skupper"
            spec:
              ports:
              - name: http
                port: 80
              type: LoadBalancer
            EOF
            fi
