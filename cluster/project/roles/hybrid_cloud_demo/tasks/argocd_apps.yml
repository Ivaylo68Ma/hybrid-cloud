---
- name: Add Privileges to Argocd Controller Service Account
  community.kubernetes.k8s:
    state: present
    namespace: "{{ argocd_namespace }}"
    definition: |-
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: cluster-admin-argocd-application-controller
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: cluster-admin
      subjects:
      - kind: ServiceAccount
        name: argocd-application-controller
        namespace: argocd

- name: Get ArgoCD Server Route
  community.kubernetes.k8s_info:
     kind: Route
     api_version: route.openshift.io/v1
     name: "{{ argocd_cr_name }}-server"
     namespace: "{{ argocd_namespace }}"
  register: argocd_ingress

- name: Get ArgoCD Server Address
  set_fact:
    argocd_server: "{{ argocd_ingress.resources[0].spec.host }}"

- debug: msg="Using ArgoCD Server {{ argocd_server}}"

- name: ArgoCD::Add Hybrid Cloud Repositories
  community.kubernetes.k8s:
    state: present
    namespace: "{{ argocd_namespace }}"
    definition: "{{ item | from_yaml }}"
    wait: yes
  with_file:
    - argocd/app_repositories.yaml
  loop_control:
    label: "hybrid-cloud-repositories"

- name: ArgoCD::Create hybrid-cloud project
  community.kubernetes.k8s:
    state: present
    namespace: "{{ argocd_namespace }}"
    definition: "{{ item | from_yaml }}"
    wait: yes
  with_file:
    - argocd/project_hybrid_cloud.yaml
  loop_control:
    label: "project-hybrid-cloud"

- name: Create ArgoCD App::core
  community.kubernetes.k8s:
    state: present
    namespace: "{{ argocd_namespace }}"
    definition: "{{ item | from_yaml }}"
    wait: yes
  with_file:
    - argocd/app_core.yaml
  loop_control:
    label: "hybrid-cloud-core"

- include_tasks: argocd_app_status.yml
  vars:
    argocd_app_name: hybrid-cloud-core

- name: Create ArgoCD App::RBAC
  community.kubernetes.k8s:
    state: present
    namespace: "{{ argocd_namespace }}"
    definition: "{{ item | from_yaml }}"
    wait: yes
  with_file:
    - argocd/app_rbac.yaml
  loop_control:
    label: "hybrid-cloud-rbac"

- include_tasks: argocd_app_status.yml
  vars:
    argocd_app_name: hybrid-cloud-rbac

- name: Create ArgoCD App::Skupper
  community.kubernetes.k8s:
    state: present
    namespace: "{{ argocd_namespace }}"
    definition: "{{ item | from_yaml }}"
    wait: yes
  with_file:
    - argocd/app_skupper.yaml
  loop_control:
    label: "hybrid-cloud-skupper"
 
- include_tasks: argocd_app_status.yml
  vars:
    argocd_app_name: hybrid-cloud-rbac

- name: Create ArgoCD App::Backend
  community.kubernetes.k8s:
    state: present
    namespace: "{{ argocd_namespace }}"
    definition: "{{ item | from_yaml }}"
    wait: yes
  when: "'backend' in tiers"
  with_file:
    - "argocd/app_{{ backend_type|lower }}_backend.yaml"
  loop_control:
    label: "hybrid-cloud-{{ backend_type|lower }}-backend"

- include_tasks: argocd_app_status.yml
  vars:
    argocd_app_name: "hybrid-cloud-backend-{{ backend_type|lower }}"

- name: Create ArgoCD App::Frontend
  community.kubernetes.k8s:
    state: present
    namespace: "{{ argocd_namespace }}"
    definition: "{{ item | from_yaml }}"
    wait: yes
  when: "'frontend' in tiers"
  with_file:
    - "argocd/app_{{ backend_type|lower }}_frontend.yaml"
  loop_control:
    label: "hybrid-cloud-{{ backend_type|lower }}-frontend"

- include_tasks: argocd_app_status.yml
  vars:
    argocd_app_name: "hybrid-cloud-frontend-{{ backend_type|lower }}"
  when: "'frontend' in tiers"

- name: Create ArgoCD App::Skupper VAN
  community.kubernetes.k8s:
    state: present
    namespace: "{{ argocd_namespace }}"
    definition: "{{ item | from_yaml }}"
    wait: yes
  when: create_site_token | bool
  with_file:
    - "argocd/app_van.yaml"
  loop_control:
    label: "hybrid-cloud-van"

- include_tasks: argocd_app_status.yml
  vars:
    argocd_app_name: "hybrid-cloud-van"
  when: create_site_token | bool